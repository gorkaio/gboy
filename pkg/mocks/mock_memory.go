// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gorkaio/gboy/pkg/memory (interfaces: MemoryInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMemoryInterface is a mock of MemoryInterface interface
type MockMemoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMemoryInterfaceMockRecorder
}

// MockMemoryInterfaceMockRecorder is the mock recorder for MockMemoryInterface
type MockMemoryInterfaceMockRecorder struct {
	mock *MockMemoryInterface
}

// NewMockMemoryInterface creates a new mock instance
func NewMockMemoryInterface(ctrl *gomock.Controller) *MockMemoryInterface {
	mock := &MockMemoryInterface{ctrl: ctrl}
	mock.recorder = &MockMemoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMemoryInterface) EXPECT() *MockMemoryInterfaceMockRecorder {
	return m.recorder
}

// Read mocks base method
func (m *MockMemoryInterface) Read(arg0 uint16) byte {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read", arg0)
	ret0, _ := ret[0].(byte)
	return ret0
}

// Read indicates an expected call of Read
func (mr *MockMemoryInterfaceMockRecorder) Read(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockMemoryInterface)(nil).Read), arg0)
}

// Write mocks base method
func (m *MockMemoryInterface) Write(arg0 uint16, arg1 byte) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Write", arg0, arg1)
}

// Write indicates an expected call of Write
func (mr *MockMemoryInterfaceMockRecorder) Write(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockMemoryInterface)(nil).Write), arg0, arg1)
}
