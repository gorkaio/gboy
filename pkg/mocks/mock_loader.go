// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gorkaio/gboy/pkg/cart (interfaces: LoaderInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	cart "github.com/gorkaio/gboy/pkg/cart"
	reflect "reflect"
)

// MockLoaderInterface is a mock of LoaderInterface interface
type MockLoaderInterface struct {
	ctrl     *gomock.Controller
	recorder *MockLoaderInterfaceMockRecorder
}

// MockLoaderInterfaceMockRecorder is the mock recorder for MockLoaderInterface
type MockLoaderInterfaceMockRecorder struct {
	mock *MockLoaderInterface
}

// NewMockLoaderInterface creates a new mock instance
func NewMockLoaderInterface(ctrl *gomock.Controller) *MockLoaderInterface {
	mock := &MockLoaderInterface{ctrl: ctrl}
	mock.recorder = &MockLoaderInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLoaderInterface) EXPECT() *MockLoaderInterfaceMockRecorder {
	return m.recorder
}

// Load mocks base method
func (m *MockLoaderInterface) Load(arg0 string) (cart.CartInterface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Load", arg0)
	ret0, _ := ret[0].(cart.CartInterface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Load indicates an expected call of Load
func (mr *MockLoaderInterfaceMockRecorder) Load(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Load", reflect.TypeOf((*MockLoaderInterface)(nil).Load), arg0)
}
